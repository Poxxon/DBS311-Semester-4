-- Pouya Rad
-- 03/02/25

-- Data insertion - week5
INSERT INTO EMPLOYEE_INFO VALUES(102,'manu','john','90000','9.0','12-09-15',70,'ABC');

CREATE TABLE job_history (
    EMPLOYEE_ID NUMBER(6),
    START_DATE DATE,
    END_DATE DATE,
    JOB_ID VARCHAR2(10),
    DEPARTMENT_ID NUMBER(4),
    CONSTRAINT pk_job_history PRIMARY KEY (EMPLOYEE_ID, START_DATE)
);

INSERT INTO job_history VALUES (102, TO_DATE('13-JAN-93', 'DD-MON-YY'), TO_DATE('24-JUL-98', 'DD-MON-YY'), 'IT_PROG', 60);
INSERT INTO job_history VALUES (101, TO_DATE('21-SEP-89', 'DD-MON-YY'), TO_DATE('27-OCT-93', 'DD-MON-YY'), 'AC_ACCOUNT', 110);
INSERT INTO job_history VALUES (101, TO_DATE('28-OCT-93', 'DD-MON-YY'), TO_DATE('15-MAR-97', 'DD-MON-YY'), 'AC_MGR', 110);
INSERT INTO job_history VALUES (201, TO_DATE('17-FEB-96', 'DD-MON-YY'), TO_DATE('19-DEC-99', 'DD-MON-YY'), 'MK_REP', 20);
INSERT INTO job_history VALUES (114, TO_DATE('24-MAR-98', 'DD-MON-YY'), TO_DATE('31-DEC-99', 'DD-MON-YY'), 'ST_CLERK', 50);
INSERT INTO job_history VALUES (122, TO_DATE('01-JAN-99', 'DD-MON-YY'), TO_DATE('31-DEC-99', 'DD-MON-YY'), 'ST_CLERK', 50);
INSERT INTO job_history VALUES (200, TO_DATE('17-SEP-87', 'DD-MON-YY'), TO_DATE('17-JUN-93', 'DD-MON-YY'), 'AD_ASST', 90);
INSERT INTO job_history VALUES (176, TO_DATE('24-MAR-98', 'DD-MON-YY'), TO_DATE('31-DEC-98', 'DD-MON-YY'), 'SA_REP', 80);
INSERT INTO job_history VALUES (176, TO_DATE('01-JAN-99', 'DD-MON-YY'), TO_DATE('31-DEC-99', 'DD-MON-YY'), 'SA_MAN', 80);
INSERT INTO job_history VALUES (200, TO_DATE('01-JUL-94', 'DD-MON-YY'), TO_DATE('31-DEC-98', 'DD-MON-YY'), 'AC_ACCOUNT', 90);

COMMIT;

-- In class activity part
SELECT * FROM EMPLOYEE_INFO;
SELECT * FROM JOB_HISTORY;

-- UNION
-- Syntax: SELECT col1 FROM table1 UNION SELECT col1 FROM table2
-- Combines tables without repeating value
SELECT EMPLOYEE_ID, DEPARTMENT_ID, SALARY, COMMISSION_PCT FROM EMPLOYEE_INFO
UNION
SELECT EMPLOYEE_ID, DEPARTMENT_ID, 0, 0 FROM JOB_HISTORY;

-- UNION ALL
-- Syntax: SELECT col1 FROM table1 UNION SELECT col1 FROM table2
-- Combines tables with repeating value
SELECT EMPLOYEE_ID, DEPARTMENT_ID, SALARY, COMMISSION_PCT FROM EMPLOYEE_INFO
UNION ALL
SELECT EMPLOYEE_ID, DEPARTMENT_ID, 0, 0 FROM JOB_HISTORY
ORDER BY 1,2;

-- INTERSECT
-- Common values from both sides
SELECT DEPARTMENT_ID FROM EMPLOYEE_INFO
INTERSECT
SELECT DEPARTMENT_ID FROM JOB_HISTORY;

-- Retrieve list of unique employee first names and job id
SELECT FIRST_NAME AS "Employee name" FROM EMPLOYEE_INFO
UNION
SELECT JOB_ID FROM JOB_HISTORY;

-- MINUS
-- Rows that are in the first table but not in the second table
-- Find employee id that exist in employee info but does not exist in job_history
-- Used for comparing 
SELECT EMPLOYEE_ID FROM EMPLOYEE_INFO
MINUS
SELECT EMPLOYEE_ID FROM JOB_HISTORY;

-- Find department_id where employees previously worked but not currently assigned
SELECT DEPARTMENT_ID FROM JOB_HISTORY
MINUS
SELECT DEPARTMENT_ID FROM EMPLOYEE_INFO;
