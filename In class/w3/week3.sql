CREATE TABLE EMPLOYEE_INFO (
    EMPLOYEE_ID NUMBER PRIMARY KEY,
    FIRST_NAME VARCHAR2(50),
    LAST_NAME VARCHAR2(50),
    SALARY NUMBER(10, 2),
    COMMISSION_PCT NUMBER(5, 2),
    HIRE_DATE DATE,
    DEPARTMENT_ID NUMBER,
    JOB_ID VARCHAR2(10)
);

INSERT INTO EMPLOYEE_INFO (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, COMMISSION_PCT, HIRE_DATE, DEPARTMENT_ID, JOB_ID)
VALUES (1, 'John', 'Doe', 60000, 0.10, TO_DATE('2020-01-01', 'YYYY-MM-DD'), 10, 'SA_REP');
INSERT INTO EMPLOYEE_INFO (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, COMMISSION_PCT, HIRE_DATE, DEPARTMENT_ID, JOB_ID)
VALUES (2, 'Jane', 'Smith', 80000, 0.15, TO_DATE('2018-02-15', 'YYYY-MM-DD'), 20, 'SA_REP');
INSERT INTO EMPLOYEE_INFO (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, COMMISSION_PCT, HIRE_DATE, DEPARTMENT_ID, JOB_ID)
VALUES (3, 'Mary', 'Johnson', 50000, 0.05, TO_DATE('2019-03-10', 'YYYY-MM-DD'), 10, 'SA_MAN');
INSERT INTO EMPLOYEE_INFO (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, COMMISSION_PCT, HIRE_DATE, DEPARTMENT_ID, JOB_ID)
VALUES (4, 'James', 'Brown', 45000, NULL, TO_DATE('2017-05-05', 'YYYY-MM-DD'), 30, 'SA_REP');
INSERT INTO EMPLOYEE_INFO (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY, COMMISSION_PCT, HIRE_DATE, DEPARTMENT_ID, JOB_ID)
VALUES (5, 'Patricia', 'Davis', 70000, NULL, TO_DATE('2016-07-01', 'YYYY-MM-DD'), 20, 'SA_REP');


-- In-Class Part --
SELECT * FROM EMPLOYEE_INFO;

-- Average salary of employees
SELECT AVG(SALARY) FROM EMPLOYEE_INFO;

-- Min value 
SELECT MIN(SALARY) FROM EMPLOYEE_INFO;

-- Max value
SELECT MAX(SALARY) FROM EMPLOYEE_INFO;

-- Standard deviation function
SELECT STDDEV(SALARY) FROM EMPLOYEE_INFO;

-- Sum value of all salaries
SELECT SUM(SALARY), VARIANCE(SALARY) FROM EMPLOYEE_INFO;

-- Single line command to see salaries for sales reps
SELECT SUM(SALARY), VARIANCE(SALARY), MIN(SALARY) FROM EMPLOYEE_INFO
WHERE JOB_ID LIKE '%REP%';

-- Checking for seniority based on hire date
SELECT MIN(HIRE_DATE) AS "Senior", MAX(HIRE_DATE) AS "Junior" FROM EMPLOYEE_INFO;

-- Count number of employees
SELECT COUNT(*) FROM EMPLOYEE_INFO;

-- Count the number of departments
SELECT COUNT(DISTINCT(DEPARTMENT_ID)) AS "Number of departments" FROM EMPLOYEE_INFO;

-- Replace null to '0' using NVL()
SELECT NVL(COMMISSION_PCT, 0) FROM EMPLOYEE_INFO;

-- Identify avg salary for each department
SELECT AVG(SALARY), DEPARTMENT_ID FROM EMPLOYEE_INFO GROUP BY DEPARTMENT_ID;